<%= if length(Enum.filter(@services,
      fn s -> s.current_incident_type != nil && s.current_incident_type != "s" end)
    ) == 0 do %>
  <div class="no-incidents">All Systems Operarional</div>
<% end %>

<%= for service <- @services do %>
  <div class="service-status status-type-<%= service.current_incident_type %>">
    <span class="service-status--name"><%= service.name %></span>
    <div class="card">
      <div class="status-column"></div>
      <div class="service-status--details-column">
        <spam
          class="service-status--icon glyphicon <%= Statushq.SPM.Incident.type_icons[service.current_incident_type] %>"
          aria-hidden="true"
        >
      </spam>
      <span class="service-status--status">
        <%= Statushq.SPM.Incident.types[service.current_incident_type] %>
      </span>
      </div>
    </div>
  </div>
<% end %>

<div class="modal subscribe-modal">
  <div class="modal-header">
    <h3>Subscribe for notifications</h3>
  </div>
  <div class="modal-body">
    <%= form_for @conn, sd(status_page_subscribe_path(@conn, :subscribe, @status_page.subdomain), @status_page), [as: :subscription], fn f -> %>
      <div class="left">
        <%= email_input f, :email, required: true, autofocus: true, placeholder: "E-Mail" %>
      </div>
      <div class="right">
        <%= submit "Subscribe" %>
      </div>
    <% end %>
  </div>
</div>
<div class="modal-backdrop"></div>

<!-- Current incidents -->

<%= if length(@incidents) > 0 do %>
<br>
<h4 class="text-muted">Current Incidents</h4>
<hr>

<%= for incident <- @incidents do %>
  <%= render StatushqWeb.IncidentView, "incident.html", conn: @conn, incident: incident, status_page: @status_page %>
<% end %>
<% end %>

<!-- Future maintenances -->

<%= if length(@maintenances) > 0 do %>
<br>
<h4 class="text-muted">Scheduled Maintenances</h4>
<hr>
<%= for incident <- @maintenances do %>
  <%= render StatushqWeb.IncidentView, "incident.html", conn: @conn, incident: incident, status_page: @status_page %>
<% end %>
<% end %>

<!-- Past incidents -->

<%= if length(@past_incidents) > 0 do %>
<br>
<h4 class="text-muted">Past Incidents</h4>
<hr>

<%= for incident <- @past_incidents do %>
  <%= render StatushqWeb.IncidentView, "incident.html", conn: @conn, incident: incident, status_page: @status_page %>
<% end %>
<% end %>

<!-- EO Incidents -->

<%= if @status_page.display_uptime_graph do %>
<div class="incidents-history">
  <span class="uptime"><%= @uptime %>% Uptime</span>
  <div class="segments"><!-- content goes here --></div>
  <div class="time-legends">
    <span>60 days ago</span>
    <span>Today</span>
  </div>
</div>
<% end %>


<%= link "Incidents Archive",
  to: status_page_incident_path(@conn, :index, @status_page) |> sd(@status_page),
  class: "previous-incidents pull-right"
%>

<script>
window.onload = function() {
  var $ = document.querySelector.bind(document);
  var subsBtn = $('.subscribe');
  var modal = $('.modal');
  var modalBackdrop = $('.modal-backdrop');

  if (subsBtn) {
    subsBtn.onclick = function() {
      modal.classList.add('shown');
      modalBackdrop.classList.add('shown');
      return false;
    };
  }

  modalBackdrop.onclick = function() {
    modal.classList.remove('shown');
    modalBackdrop.classList.remove('shown');
  };
};
<%= if @status_page.display_uptime_graph do %>
setupIncidentsChart();
<% end %>

function setupIncidentsChart() {
  var incidents = <%= raw Poison.encode! @last_incidents %>;
  incidents.forEach(function(i) {
    i.starts_at = new Date(i.starts_at);
    i.ends_at = i.ends_at ? new Date(i.ends_at) : null;
  });
  var DAY = 24*60*60*1000;
  var days = 60;
  var d = new Date();
  var arr = [];
  var IC_MAJOR = 'red';
  var IC_MINOR = 'orange';
  var IC_OK = '#10bb70';

  for (var i = days; i > 0; i--) {
    var dayStart = new Date(d - i*DAY);
    dayStart.setHours(0,0,0,0);
    var dayEnd = dayStart.getTime() + DAY;
    var incidentTypes = {};
    incidents.forEach(function(i) {
      var iStart = i.starts_at < dayStart ? dayStart : i.starts_at;
      var iEnd = !i.ends_at || i.ends_at > dayEnd ? dayEnd : i.ends_at;
      if (iStart < dayEnd && iEnd > dayStart) {
        if (!incidentTypes[i.type]) incidentTypes[i.type] = { n: 0, hours: 0 };
        incidentTypes[i.type].n += 1;
        incidentTypes[i.type].hours += (iEnd - iStart) / (1000*60*60);
      }
    });
    arr.push({
      day: dayStart,
      incidents: incidentTypes
    });
    var segment = document.createElement('div');
    var gradientStyle = "";
    var mssg = dayStart.toString().split('00')[0]+"\n";
    var percTotal = 0;
    if (incidentTypes["a"]) {
      var incident = incidentTypes['a'];
      var perc = incident.hours/(24/100) + percTotal;
      gradientStyle += IC_MAJOR+' '+percTotal+'%, '+IC_MAJOR+' '+perc+'%, ';
      percTotal = perc;
      mssg += incident.n+' Major incidents\n';
    }
    if (incidentTypes['i']) {
      var incident = incidentTypes['i'];
      var perc = incident.hours/(24/100) + percTotal;
      gradientStyle += IC_MINOR+' '+percTotal+'%, '+IC_MINOR+' '+perc+'%, ';
      percTotal = perc;
      mssg += incident.n+' Minor incidents';
    }
    if (!incidentTypes['a'] && !incidentTypes['i']) mssg += 'No incidents';
    gradientStyle += IC_OK+' '+percTotal+'%, '+IC_OK+' 100% ';
    segment.style.background = 'linear-gradient(0deg,'+gradientStyle+')';
    segment.title = mssg;
    document.querySelectorAll('.incidents-history .segments')[0].append(segment);
  }
  console.debug(arr);
}
</script>
